Todo: 

run the server again if it is already running : on run dufs
Allow to enter only possible ports. like 6000 didnt worked but 7000 works.
DNS revision
Micorservices

Advertise the ip and port on network

Decide to make a website or desktop app for client side (discover).

Get the last fetched path (store on click) -> this is to be at the same location after switching the tabs.
 
Create a tree to store the requested links in order to persiste the data.

Fileviewer content disappear on tab switching

Avoid using server state variable as a dependancy to start and stop the server. It can be null on reload. Causing issues

store the service info and port in state only instead of getting port from user system 

Toast

Fileviewer bug (not showing file sometime)

Bug: handleRunServer not working



Decisions: 
Central registry and deregistry of the service when server starts and stops.




Learnings: 

Zero-configuration Networking (Zeroconf)
DNS : https://www.youtube.com/watch?v=6xDWeaatAs0&list=PLks8W396lro76WKqVS5pvBiOd_z_Cx25q&index=3
What's the history behind 192.168.1.1 Why not 192.169.1.1 or any other IP address
Multicast DNS explained: https://www.youtube.com/watch?v=CPOpPTpMSiE 
Monolithic vs Micorservices  : Nextjs app is a good example of Monolithic architecture
revision Micorservices
I am not sure: using a ref to store the server instance in your Server component will ensure that it persists across navigation changes, hot reloads, and component re-renders.

Other ways other then mdns: 
for loop 192.169._._ 
Central database
https://www.youtube.com/watch?v=v4u7m2Im7ng




https://www.youtube.com/watch?v=dKS_OMUGHoE&t=515s 
only .local are allowed in mdns

https://www.geeksforgeeks.org/multicasting-in-computer-network/
https://medium.com/@yassinehouta/multicasting-using-rxjs-588740d7a5db
https://networklessons.com/multicast/introduction-to-multicast



https://docs.rs/mdns-sd/latest/mdns_sd/index.html#
mDNS app in android to discover